; Script generated by the Inno Script Studio Wizard.
; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName "FARO Scan Verification Tool"
#define MyAppVersion GetFileVersion('..\dist\hash_verify\hash_verify.exe')
#define MyAppPublisher "FARO Technologies Inc."
#define MyAppURL "https://knowledge.faro.com/Hardware/3D_Scanners/Focus/Scan_Verification_Tool_Download_and_Manual"
#define SetupName "FARO_Scan_Verification_Tool"
#define BinDir "..\dist\hash_verify"
#define ProjDir ".."
#define AppExe "hash_verify.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId                  = {{5192C0C6-FBD4-455A-9C8D-B78095AB4614}
AppName                = {#MyAppName}
AppVersion             = {#MyAppVersion}
VersionInfoVersion     = {#MyAppVersion}
AppVerName             = {#MyAppName} {#MyAppVersion}
AppPublisher           = {#MyAppPublisher}
AppCopyright           = (C) 2017-2018 {#MyAppPublisher}
AppPublisherURL        = {#MyAppURL}
AppSupportURL          = {#MyAppURL}
AppUpdatesURL          = {#MyAppURL}
CreateAppDir           = yes
DefaultDirName         = {pf64}/FARO/Scan Verification Tool
LicenseFile            = ..\LICENSE
OutputDir              = output
OutputBaseFilename     = {#SetupName}_{#MyAppVersion}
SetupIconFile          = ..\images\verify.ico
;Compression            = None
LZMANumBlockThreads    = 8
SolidCompression       = yes
UninstallDisplayName   = {#MyAppName}
UninstallDisplayIcon   = {app}\images\verify.ico
ArchitecturesInstallIn64BitMode = x64
UsePreviousTasks       = no
AlwaysRestart          = no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
; Files
Source: "{#BinDir}\{#AppExe}";         DestDir: "{app}";             Flags: ignoreversion; BeforeInstall: TaskKill('{#AppExe}')
Source: "{#BinDir}\*.dll";             DestDir: "{app}";             Flags: ignoreversion
Source: "{#BinDir}\*.pyd";             DestDir: "{app}";             Flags: ignoreversion
Source: "{#BinDir}\base_library.zip";  DestDir: "{app}";             Flags: ignoreversion
Source: "{#BinDir}\*.manifest";        DestDir: "{app}";             Flags: ignoreversion
; Modules
Source: "{#BinDir}\Cryptodome\*";      DestDir: "{app}\Cryptodome";  Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#BinDir}\PyQt5\*";           DestDir: "{app}\PyQt5";       Flags: ignoreversion recursesubdirs createallsubdirs
; Resources
Source: "{#BinDir}\cert\*";            DestDir: "{app}\cert";        Flags: ignoreversion
Source: "{#BinDir}\images\*";          DestDir: "{app}\images";      Flags: ignoreversion
Source: "{#BinDir}\keys\*";            DestDir: "{app}\keys";        Flags: ignoreversion
Source: "{#BinDir}\manual\*.pdf";      DestDir: "{app}\manual";      Flags: ignoreversion
; Licenses
Source: "{#BinDir}\licenses\*";        DestDir: "{app}\licenses";    Flags: ignoreversion

[Icons]
Name: "{commonprograms}\FARO\FARO Scan Verification Tool"; Filename: "{app}\{#AppExe}"; WorkingDir: "{app}"; IconFilename: "{app}\images\verify.ico"; IconIndex: 0
Name: "{commondesktop}\FARO Scan Verification Tool";  Filename: "{app}\{#AppExe}"; WorkingDir: "{app}"; IconFilename: "{app}\images\verify.ico"; Comment: "FARO Scan Verification Tool";

[Setup]
WizardImageFile=images\installer_main_164x314.bmp
WizardSmallImageFile=images\FARO.bmp
WizardImageStretch=No
CloseApplications=Yes

[UninstallRun]
; Kill all tasks
Filename: "taskkill"; Parameters: "/im ""{#AppExe}"" /f"; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: "{localappdata}\FARO\ScanVerificationTool"
Type: filesandordirs; Name: "{app}"

[InstallDelete]
Type: filesandordirs; Name: "{app}"

[Code]
// =================================================
procedure UpdateProgress(Position: Integer);
begin
  WizardForm.ProgressGauge.Position := Position * WizardForm.ProgressGauge.Max div 100;
  Sleep(16);
end;

// =================================================
procedure TaskKill(FileName: String);
var
  ResultCode: Integer;
begin
  Exec(ExpandConstant('taskkill.exe'), '/f /im ' + '"' + FileName + '"', '', SW_HIDE, ewWaitUntilTerminated, ResultCode)
end;

// =================================================
function CommandLineSwitchIsPresent(Param : String): Boolean;
var
  i: Integer;
  str: String;
begin
  Result := False;
  for i:= 0 to ParamCount do
  begin
    str := ParamStr(i)
    if (CompareText(Param, str) = 0) then
    begin
      Result := True;
      break;
    end;
  end;
end;
